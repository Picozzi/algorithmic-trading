{"version":3,"sources":["components/StocksList/variants.js","components/StocksList/InitialCardContent.js","components/StocksList/Chart.js","components/StocksList/ExpandedCardContent.js","components/StocksList/Card.js","components/StocksList/load.gif","components/StocksList/List.js","App.js","reportWebVitals.js","index.js"],"names":["cardContentVariants","inactive","transition","staggerChildren","duration","delay","active","delayChildren","staggerDirection","contentVariants","x","y","opacity","expandedVariants","contentBlockVariants","exit","CardBase","styled","motion","div","Image","img","InitalCardContent","Rank","Ticker","Frequency","props","color","FrequencyValue","ProbabilityValue","InitalCard","data","onClick","variants","animate","initial","rank","src","replace","symbol","positive_frequency","Icon","name","size","negative_frequency","Math","floor","probability","Chart","LineChart","width","height","chart_data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tickFormatter","tickItem","a","Date","year","getFullYear","getMonth","getUTCDate","YAxis","yAxisId","orientation","label","value","angle","offset","dy","position","toFixed","Legend","Line","type","stroke","activeDot","r","ExpandedCardContent","Close","AnimatedContentBlock","children","ExpandedCard","Base","Cards","Card","useState","isExpanded","setIsExpanded","className","inital","AnimatePresence","exitBeforeEnter","stock","ket","InitialCardContent","Section","section","LoadingDiv","LoadingSpan","span","LoadingImg","LoadingScreen","LoadingAnimation","StockView","list","id","map","item","key","List","stockList","setStockList","useEffect","axios","get","then","response","console","log","catch","error","AppHolder","App","title","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae572cca.chunk.js","sourcesContent":["export const cardContentVariants = {\n  inactive: {\n    transition: {\n      staggerChildren: 0.3,\n      duration: 0.4,\n      delay: 0.4,\n    },\n  },\n  active: {\n    transition: {\n      staggerChildren: 0.3,\n      delayChildren: 0.3,\n      duration: 0.4,\n      staggerDirection: -1,\n      delay: 0.4,\n    },\n  },\n};\n\nexport const contentVariants = {\n  inactive: {\n    x: 0,\n    y: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  active: {\n    x: 0,\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n};\n\nexport const expandedVariants = {\n  inactive: {\n    opacity: 0,\n  },\n  active: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.3,\n      delayChildren: 0.3,\n    },\n  },\n};\n\nexport const contentBlockVariants = {\n  inactive: {\n    opacity: 0,\n    y: 0,\n  },\n  active: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n  exit: {\n    opacity: 0,\n    y: 0,\n    transition: {\n      duration: 0.4,\n    },\n  },\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { cardContentVariants, contentVariants } from \"./variants\";\nimport \"../../App.css\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nconst CardBase = styled(motion.div)`\n  background: white;\n  width: 100%;\n  height: 100%;\n  border-radius: 15px;\n`;\n\nconst Image = styled(motion.img)`\n  max-width: 11vh;\n  vertical-align: middle;\n  border-radius: 15px;\n  height: auto;\n`;\n\nconst InitalCardContent = styled(motion.div)`\n  height: 100%;\n  padding-left: 2em;\n  padding-right: 2em;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  a {\n    text-decoration: none;\n    color: #555555;\n    font-weight: 500;\n    font-size: 1em;\n    cursor: pointer;\n  }\n`;\n\nconst Rank = styled.div`\n  color: #555555;\n  font-size: 3em;\n  font-weight: 700;\n`;\nconst Ticker = styled.div`\n  color: #555555;\n  font-size: 1.5vw;\n  font-weight: 700;\n`;\n\nconst Frequency = styled.div`\n  color: ${(props) => props.color};\n  display: flex;\n  align-items: center;\n`;\n\nconst FrequencyValue = styled.div`\n  color: ${(props) => props.color};\n  font-size: 1.6em;\n  font-weight: 300;\n  padding-right: 10px;\n`;\n\nconst ProbabilityValue = styled.div`\n  color: #555555;\n  font-size: 1.2em;\n  font-weight: 300;\n`;\nconst InitalCard = ({ data, onClick }) => (\n  <CardBase\n    variants={cardContentVariants}\n    exit=\"inactive\"\n    animate=\"active\"\n    initial=\"inactive\"\n  >\n    <InitalCardContent variants={contentVariants}>\n      <Rank>{data.rank}</Rank>\n\n      <Image\n        src={\"https://eodhistoricaldata.com/img/logos/US/##.png\".replace(\n          \"##\",\n          data.symbol\n        )}\n      />\n      <Ticker>{data.symbol}</Ticker>\n      <Frequency color=\"#679436\">\n        <FrequencyValue color=\"#98c765\">\n          {data.positive_frequency}\n        </FrequencyValue>\n        <Icon name=\"angle up\" size=\"big\" />\n      </Frequency>\n      <Frequency color=\"#D62839\">\n        <FrequencyValue color=\"#e05966\">\n          {data.negative_frequency}\n        </FrequencyValue>\n        <Icon name=\"angle down\" size=\"big\" />\n      </Frequency>\n      <ProbabilityValue>\n        {Math.floor(data.probability * 100) + \"% Certainty\"}\n      </ProbabilityValue>\n      <a onClick={() => onClick(true)}>Chart</a>\n    </InitalCardContent>\n  </CardBase>\n);\n\nexport default InitalCard;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  Label,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\n\nconst agvvgs = [\n  {\n    normalized_date: 1630886400000,\n    sentiment: 0.34,\n    \"closing price\": null,\n  },\n  {\n    normalized_date: 1630972800000,\n    sentiment: 0.43,\n    \"closing price ($)\": 199.0,\n  },\n  {\n    normalized_date: 1631059200000,\n    sentiment: 0.42,\n    \"closing price ($)\": 198.8000030518,\n  },\n  {\n    normalized_date: 1631145600000,\n    sentiment: 0.24,\n    \"closing price ($)\": 199.1799926758,\n  },\n  {\n    normalized_date: 1631232000000,\n    sentiment: 0.34,\n    \"closing price ($)\": 190.4100036621,\n  },\n  {\n    normalized_date: 1631318400000,\n    sentiment: 0.19,\n    \"closing price ($)\": null,\n  },\n  {\n    normalized_date: 1631404800000,\n    sentiment: 0.31,\n    \"closing price ($)\": null,\n  },\n];\n\nconst Chart = (props) => {\n  function formatXAxis(tickItem) {\n    var a = new Date(tickItem);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getUTCDate();\n    return month + \" \" + date + \" \" + year;\n  }\n\n  function formatYAxis(tickItem) {\n    return tickItem.toFixed(2);\n  }\n  return (\n    <LineChart\n      width={920}\n      height={325}\n      data={props.chart_data}\n      margin={{\n        top: 5,\n        right: 20,\n        left: 30,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        dataKey=\"normalized_date\"\n        domain={[\"dataMin\", \"dataMax\"]}\n        tickFormatter={formatXAxis}\n      />\n      <YAxis\n        yAxisId=\"right\"\n        orientation=\"right\"\n        domain={[0, 1]}\n        label={{\n          value: \"Sentiment (0 - Negative and 1 - Positive)\",\n          angle: -90,\n          offset: -5,\n          dy: 10,\n          position: \"insideTopRight\",\n        }}\n      />\n      <YAxis\n        yAxisId=\"left\"\n        orientation=\"left\"\n        domain={[\"dataMin\", \"dataMax\"]}\n        tickFormatter={formatYAxis}\n        label={{\n          value: \"Closing Price ($)\",\n          angle: -90,\n          dy: 70,\n          offset: -10,\n\n          position: \"insideLeft\",\n        }}\n      />\n      <Legend />\n      <Line\n        yAxisId=\"right\"\n        type=\"monotone\"\n        dataKey=\"sentiment\"\n        stroke=\"#82ca9d\"\n      />\n      //{\" \"}\n      <Line\n        yAxisId=\"left\"\n        type=\"monotone\"\n        dataKey=\"closing price\"\n        stroke=\"#8884d8\"\n        activeDot={{ r: 8 }}\n      />\n    </LineChart>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { expandedVariants, contentBlockVariants } from \"./variants\";\nimport \"../../App.css\";\nimport { Icon } from \"semantic-ui-react\";\nimport Chart from \"./Chart\";\n\nconst CardBase = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  background: white;\n  border-radius: 15px;\n  width: 100%;\n  height: 100%;\n  @media (min-width: 1575px) {\n    padding-left: 0;\n  }\n`;\n\nconst ExpandedCardContent = styled(motion.div)`\n  padding-left: 1em;\n  padding-top: 1.1em;\n`;\n\nconst Close = styled(motion.div)`\n  margin-top: 1vw;\n  margin-right: 1vw;\n  a {\n    color: #555555;\n    cursor: pointer;\n    text-decoration: none;\n  }\n`;\n\nconst AnimatedContentBlock = ({ children }) => (\n  <motion.div variants={contentBlockVariants}>{children}</motion.div>\n);\n\nconst ExpandedCard = ({ data, onClick }) => {\n  return (\n    <CardBase\n      variants={expandedVariants}\n      animate=\"active\"\n      initial=\"inactive\"\n      exit=\"exit\"\n    >\n      <ExpandedCardContent>\n        <AnimatedContentBlock>\n          <Chart chart_data={data.chart_data} />\n        </AnimatedContentBlock>\n      </ExpandedCardContent>\n\n      <AnimatedContentBlock>\n        <Close color=\"#555555\">\n          <a onClick={() => onClick(false)}>\n            <Icon name=\"close\" size=\"large\" />\n          </a>\n        </Close>\n      </AnimatedContentBlock>\n    </CardBase>\n  );\n};\n\nexport default ExpandedCard;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport InitialCardContent from \"./InitialCardContent\";\nimport ExpandedCardContent from \"./ExpandedCardContent\";\nimport { useMediaQuery } from \"react-responsive\";\nimport \"../../App.css\";\n\nconst Base = styled(motion.div)`\n  z-index: 2;\n  position: relative;\n  display: flex;\n  height: 100%;\n`;\n\nconst Cards = styled(motion.div)`\n  font-family: Montserrat;\n  padding-bottom: 50px;\n`;\n\nconst Card = (props) => {\n  const [isExpanded, setIsExpanded] = useState();\n  const cardVariants = {\n    inactive: {\n      height: \"15vh\",\n      width: \"60vw\",\n      transition: {\n        duration: 0.5,\n        delay: 0.4,\n      },\n    },\n    active: {\n      height: \"40vh\",\n      width: \"60vw\",\n      transition: {\n        duration: 0.5,\n        delay: 0.6,\n      },\n    },\n  };\n\n  return (\n    <Cards>\n      <motion.div\n        className={`card ${isExpanded ? \"expanded\" : \"initial\"}`}\n        variants={cardVariants}\n        animate={isExpanded ? \"active\" : \"inactive\"}\n        inital=\"inactive\"\n      >\n        <Base>\n          <AnimatePresence initial={false} exitBeforeEnter>\n            {!isExpanded ? (\n              <InitialCardContent\n                data={props.stock}\n                onClick={setIsExpanded}\n                key=\"initalContent\"\n              />\n            ) : (\n              <ExpandedCardContent\n                data={props.stock}\n                onClick={setIsExpanded}\n                ket=\"expandedContent\"\n              />\n            )}\n          </AnimatePresence>\n        </Base>\n      </motion.div>\n    </Cards>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/load.cb96f1c1.gif\";","import React, { useState, useEffect } from \"react\";\nimport \"../../App.css\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport LoadingAnimation from \"./load.gif\";\n\nconst Section = styled.section`\n  display: flex;\n  background-color: #f5f5f5;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  h1 {\n    margin-bottom: 0.5rem;\n    font-family: Montserrat;\n    color: #555555;\n    font-size: 3vw;\n    padding-top: 40px;\n    padding-bottom: 2em;\n  }\n`;\n\nconst LoadingDiv = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #f5f5f5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst LoadingSpan = styled.span`\n  display: inline-block;\n`;\n\nconst LoadingImg = styled.img`\n  width: 50%;\n`;\n\nconst LoadingScreen = () => {\n  return (\n    <LoadingDiv>\n      <LoadingSpan>\n        <LoadingImg src={LoadingAnimation} />\n      </LoadingSpan>\n    </LoadingDiv>\n  );\n};\n\nconst List = () => {\n  const [stockList, setStockList] = useState(null);\n  const api_url = \"http://localhost:5001/aggregation\";\n  useEffect(() => {\n    axios\n      .get(api_url)\n      .then((response) => {\n        console.log(\"SUCCESS\", response);\n        setStockList(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      {stockList == null ? <LoadingScreen /> : <StockView data={stockList} />}\n    </div>\n  );\n};\n\nconst StockView = (props) => {\n  const list = props.data;\n  return (\n    <Section id={props.id}>\n      <h1>Top 10 Mentioned Social Media Stocks</h1>\n      {list.map((item, key) => (\n        <Card stock={item} id={key} />\n      ))}\n    </Section>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport List from \"./components/StocksList/List\";\nimport styled from \"styled-components\";\n\nconst AppHolder = styled.div`\n  font-family: Montserrat;\n`;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <AppHolder>\n        <List title=\"List of Stocks\" id=\"stock_list\" />\n      </AppHolder>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}